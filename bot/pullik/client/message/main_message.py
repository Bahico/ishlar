from aiogram.dispatcher import Dispatcher
from aiogram import Bot, types
from aiogram.types import ReplyKeyboardRemove

from .eng import get_message_eng
from .rus import get_message_rus
from ..main_menu import main_menu
from .uzb import get_message_uzb
from ..basket.basket_uz import get_basket

from config import TOKEN

# some code

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


async def get_start(message: types.Message, conn):
    if message.text == "üá∫üáø O'zbekcha":
        await main_menu.get_menu_client(message, conn, "uzb")
    elif message.text == "üá∑üá∫ P—É—Å—Å–∫–∏–π":
        await main_menu.get_menu_client(message, conn, "rus")
    elif message.text == "üá¨üáß English":
        await main_menu.get_menu_client(message, conn, "eng")


async def get_message_client(message: types.Message, conn, vote_cb):
    person = conn.execute("select language, basket, name from CLIENT where id = (?);",
                          (message.from_user.id,)).fetchall()
    person = list(person[0])
    if message.text == "üì• Savat":
        if person[1] is not None:
            await get_basket(message, conn, vote_cb)
        else:
            await bot.send_message(message.from_user.id, "Hali savat to'lmadi")
    elif message.text == "‚úÖ Savatni to‚Äôldirdim":
        if person[1] is not None:
            if person[2] is not None:
                await get_basket(message, conn, vote_cb)
            else:
                await bot.send_message(message.from_user.id, "Keling avval tanishib olamiz. ‚ò∫",
                                       reply_markup=ReplyKeyboardRemove())
                conn.execute("update CLIENT set bosqich = (?) where id = (?);", (10, message.from_user.id))
        elif person[1] is None:
            await bot.send_message(message.from_user.id, "Hali savatni to'ldirmadingiz!")

    elif message.text == "üì• –ö–æ—Ä–∑–∏–Ω–∞":
        if person[1] is not None:
            await get_basket(message, conn, vote_cb)
        else:
            await bot.send_message(message.from_user.id, "–ö–æ—Ä–∑–∏–Ω–∞ –µ—â–µ –Ω–µ –ø–æ–ª–Ω–∞—è!")
    elif message.text == "‚úÖ —è –Ω–∞–ø–æ–ª–Ω–∏–ª –∫–æ—Ä–∑–∏–Ω—É":
        if person[1] is not None:
            if person[2] is not None:
                await get_basket(message, conn, vote_cb)
            else:
                await bot.send_message(message.from_user.id, "–î–∞–≤–∞–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. ‚ò∫",
                                       reply_markup=ReplyKeyboardRemove())
                conn.execute("update CLIENT set bosqich = (?) where id = (?);", (10, message.from_user.id))
        elif person[1] is None:
            await bot.send_message(message.from_user.id, "–í—ã –µ—â–µ –Ω–µ –Ω–∞–ø–æ–ª–Ω–∏–ª–∏ –∫–æ—Ä–∑–∏–Ω—É!")

    elif message.text == "üì• Basket":
        if person[1] is not None:
            await get_basket(message, conn, vote_cb)
        else:
            await bot.send_message(message.from_user.id, "The basket is not full yet")
    elif message.text == "‚úÖ I filled the basket":
        if person[1] is not None:
            if person[2] is not None:
                await get_basket(message, conn, vote_cb)
            else:
                await bot.send_message(message.from_user.id, "Let's get acquainted first. ‚ò∫",
                                       reply_markup=ReplyKeyboardRemove())
                conn.execute("update CLIENT set bosqich = (?) where id = (?);", (10, message.from_user.id))
        elif person[1] is None:
            await bot.send_message(message.from_user.id, "You haven't filled the basket yet!")

    if person[0] == "uzb":
        await get_message_uzb(message, conn, vote_cb)
    elif person[0] == "rus":
        await get_message_rus(message, conn, vote_cb)
    elif person[0] == "eng":
        await get_message_eng(message, conn, vote_cb)
